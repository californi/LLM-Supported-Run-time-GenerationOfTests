{
  "prompts": [
    {
      "template_name": "analyzer_v10_3",
      "template_content": "Analyze kube-znn service metrics and recommend test type.\n\nMETRICS:\n- CPU: {used_system_cpu}% ({cpu_range_description})\n- Memory: {used_system_memory}% ({memory_range_description})  \n- Response Time: {median_response_time}ms ({response_time_range_description})\n- Error Rate: {error_rate}%\n- Throughput: {throughput} req/s\n- Network Latency: {network_latency}ms\n\nLOAD:\n- Users: {concurrent_users}, Rate: {request_rate} req/s, Duration: {session_duration}s\n- Pattern: {load_pattern} ({load_pattern_description})\n- Current: {current_load_description}\n\nINFRASTRUCTURE:\n- Pods: {active_pods} active, {pending_pods} pending, {failed_pods} failed\n- Resources: {allocated_cpus} CPUs, {allocated_memory}GB RAM\n- Target: {target_system_pods} pods, Quality: {quality_of_media}\n\nADDITIONAL CONTEXT:\n- Pod Status: {active_pods} running, {pending_pods} pending, {failed_pods} failed\n- Resource Allocation: {allocated_cpus} CPUs, {allocated_memory}GB RAM allocated\n- Load Pattern: {load_pattern} with {concurrent_users} users at {request_rate} req/s\n- System Health: {health_criterion} (CPU: {used_system_cpu}%, Memory: {used_system_memory}%, Response: {median_response_time}ms)\n\nSTATUS: {system_status}\n\nANALYSIS: Analyze ALL metrics to recommend the most appropriate test type.\n\nTEST TYPE SELECTION RULES (HOLISTIC ANALYSIS):\nAnalyze ALL metrics together to determine the PRIMARY concern. Use this DECISION TREE:\n\nPRIORITY 1 - REACHABILITY:\n- Choose \"reachability\" when connectivity is the main issue\n- Conditions: Many failed pods (>5) + high error rate (>50%) + few users connecting (<10)\n- Indicators: System cannot be reached, high network latency (>1000ms), pods not responding\n- Example: Failed pods: 15, Error rate: 95%, Users: 1\n\nPRIORITY 2 - LOAD (HIGHEST PRIORITY CHECK):\n- Choose \"load\" when capacity/scalability is the main issue\n- Conditions: High CPU/memory (>70%) + many users (>100) + high request rate (>50 req/s)\n- KEY POINT: High response time with high CPU/memory + many users = LOAD, not response_time\n- System is overloaded and struggling with demand\n- Example: CPU: 83%, Memory: 82%, Users: 668, Request rate: 115 req/s\n\nPRIORITY 3 - RESPONSE_TIME:\n- Choose \"response_time\" when performance/latency is the main issue\n- Conditions: High response time (>1000ms) + stable system + few users (<10)\n- System works but is slow, NOT overloaded (CPU/memory <70%)\n- ONLY if load conditions are NOT met\n- Example: Response time: 5000ms, CPU: 20%, Memory: 25%, Users: 4\n\nDECISION FLOW:\n1. Check failed pods + error rate \u2192 reachability?\n2. Check CPU/memory + users + request rate \u2192 load?\n3. Else \u2192 response_time?\n\nRESPONSE (JSON only):\n{{\n  \"analysis_summary\": {{\n    \"recommended_test_type\": \"reachability|response_time|load\",\n    \"justification\": \"Detailed explanation of why this test type is most appropriate based on the metrics\",\n    \"priority\": \"high|medium|low\"\n  }}\n}}\n\nReturn only valid JSON.",
      "variables": {
        "analysis_timestamp": "27/10/2025 12:56:10",
        "experiment_id": "experiment_reachability_1761569770",
        "used_system_cpu": 1.5,
        "used_system_memory": 4.0,
        "median_response_time": 2500.0,
        "cpu_range_description": "within healthy range (<25%)",
        "memory_range_description": "within healthy range (<30%)",
        "response_time_range_description": "within critical range (>70ms)",
        "system_status": "operational",
        "concurrent_users": 0,
        "request_rate": 0.0,
        "session_duration": 0,
        "load_pattern": "burst",
        "load_pattern_description": "Burst load pattern",
        "current_load_description": "Moderate load",
        "target_system_pods": 0,
        "quality_of_media": 600,
        "target_system_architecture": "Microservices",
        "allocated_cpus": 6,
        "allocated_memory": 6,
        "error_rate": 95.0,
        "throughput": 0.0,
        "network_latency": 0.0,
        "active_pods": 0,
        "pending_pods": 0,
        "failed_pods": 15,
        "health_criterion": "Critical"
      },
      "filled_template": "Analyze kube-znn service metrics and recommend test type.\n\nMETRICS:\n- CPU: 1.5% (within healthy range (<25%))\n- Memory: 4.0% (within healthy range (<30%))  \n- Response Time: 2500.0ms (within critical range (>70ms))\n- Error Rate: 95.0%\n- Throughput: 0.0 req/s\n- Network Latency: 0.0ms\n\nLOAD:\n- Users: 0, Rate: 0.0 req/s, Duration: 0s\n- Pattern: burst (Burst load pattern)\n- Current: Moderate load\n\nINFRASTRUCTURE:\n- Pods: 0 active, 0 pending, 15 failed\n- Resources: 6 CPUs, 6GB RAM\n- Target: 0 pods, Quality: 600\n\nADDITIONAL CONTEXT:\n- Pod Status: 0 running, 0 pending, 15 failed\n- Resource Allocation: 6 CPUs, 6GB RAM allocated\n- Load Pattern: burst with 0 users at 0.0 req/s\n- System Health: Critical (CPU: 1.5%, Memory: 4.0%, Response: 2500.0ms)\n\nSTATUS: operational\n\nANALYSIS: Analyze ALL metrics to recommend the most appropriate test type.\n\nTEST TYPE SELECTION RULES (HOLISTIC ANALYSIS):\nAnalyze ALL metrics together to determine the PRIMARY concern. Use this DECISION TREE:\n\nPRIORITY 1 - REACHABILITY:\n- Choose \"reachability\" when connectivity is the main issue\n- Conditions: Many failed pods (>5) + high error rate (>50%) + few users connecting (<10)\n- Indicators: System cannot be reached, high network latency (>1000ms), pods not responding\n- Example: Failed pods: 15, Error rate: 95%, Users: 1\n\nPRIORITY 2 - LOAD (HIGHEST PRIORITY CHECK):\n- Choose \"load\" when capacity/scalability is the main issue\n- Conditions: High CPU/memory (>70%) + many users (>100) + high request rate (>50 req/s)\n- KEY POINT: High response time with high CPU/memory + many users = LOAD, not response_time\n- System is overloaded and struggling with demand\n- Example: CPU: 83%, Memory: 82%, Users: 668, Request rate: 115 req/s\n\nPRIORITY 3 - RESPONSE_TIME:\n- Choose \"response_time\" when performance/latency is the main issue\n- Conditions: High response time (>1000ms) + stable system + few users (<10)\n- System works but is slow, NOT overloaded (CPU/memory <70%)\n- ONLY if load conditions are NOT met\n- Example: Response time: 5000ms, CPU: 20%, Memory: 25%, Users: 4\n\nDECISION FLOW:\n1. Check failed pods + error rate \u2192 reachability?\n2. Check CPU/memory + users + request rate \u2192 load?\n3. Else \u2192 response_time?\n\nRESPONSE (JSON only):\n{\n  \"analysis_summary\": {\n    \"recommended_test_type\": \"reachability|response_time|load\",\n    \"justification\": \"Detailed explanation of why this test type is most appropriate based on the metrics\",\n    \"priority\": \"high|medium|low\"\n  }\n}\n\nReturn only valid JSON.",
      "entry_timestamp": "2025-10-27T12:56:10.162300",
      "entry_type": "template"
    }
  ],
  "llm_responses": [
    {
      "request": {
        "context": {
          "analysis_timestamp": "27/10/2025 12:56:10",
          "experiment_id": "experiment_reachability_1761569770",
          "used_system_cpu": 1.5,
          "used_system_memory": 4.0,
          "median_response_time": 2500.0,
          "cpu_range_description": "within healthy range (<25%)",
          "memory_range_description": "within healthy range (<30%)",
          "response_time_range_description": "within critical range (>70ms)",
          "system_status": "operational",
          "concurrent_users": 0,
          "request_rate": 0.0,
          "session_duration": 0,
          "load_pattern": "burst",
          "load_pattern_description": "Burst load pattern",
          "current_load_description": "Moderate load",
          "target_system_pods": 0,
          "quality_of_media": 600,
          "target_system_architecture": "Microservices",
          "allocated_cpus": 6,
          "allocated_memory": 6,
          "error_rate": 95.0,
          "throughput": 0.0,
          "network_latency": 0.0,
          "active_pods": 0,
          "pending_pods": 0,
          "failed_pods": 15,
          "health_criterion": "Critical"
        },
        "prompt": "Analyze kube-znn service metrics and recommend test type.\n\nMETRICS:\n- CPU: 1.5% (within healthy range (<25%))\n- Memory: 4.0% (within healthy range (<30%))  \n- Response Time: 2500.0ms (within critical range (>70ms))\n- Error Rate: 95.0%\n- Throughput: 0.0 req/s\n- Network Latency: 0.0ms\n\nLOAD:\n- Users: 0, Rate: 0.0 req/s, Duration: 0s\n- Pattern: burst (Burst load pattern)\n- Current: Moderate load\n\nINFRASTRUCTURE:\n- Pods: 0 active, 0 pending, 15 failed\n- Resources: 6 CPUs, 6GB RAM\n- Target: 0 pods, Quality: 600\n\nADDITIONAL CONTEXT:\n- Pod Status: 0 running, 0 pending, 15 failed\n- Resource Allocation: 6 CPUs, 6GB RAM allocated\n- Load Pattern: burst with 0 users at 0.0 req/s\n- System Health: Critical (CPU: 1.5%, Memory: 4.0%, Response: 2500.0ms)\n\nSTATUS: operational\n\nANALYSIS: Analyze ALL metrics to recommend the most appropriate test type.\n\nTEST TYPE SELECTION RULES (HOLISTIC ANALYSIS):\nAnalyze ALL metrics together to determine the PRIMARY concern. Use this DECISION TREE:\n\nPRIORITY 1 - REACHABILITY:\n- Choose \"reachability\" when connectivity is the main issue\n- Conditions: Many failed pods (>5) + high error rate (>50%) + few users connecting (<10)\n- Indicators: System cannot be reached, high network latency (>1000ms), pods not responding\n- Example: Failed pods: 15, Error rate: 95%, Users: 1\n\nPRIORITY 2 - LOAD (HIGHEST PRIORITY CHECK):\n- Choose \"load\" when capacity/scalability is the main issue\n- Conditions: High CPU/memory (>70%) + many users (>100) + high request rate (>50 req/s)\n- KEY POINT: High response time with high CPU/memory + many users = LOAD, not response_time\n- System is overloaded and struggling with demand\n- Example: CPU: 83%, Memory: 82%, Users: 668, Request rate: 115 req/s\n\nPRIORITY 3 - RESPONSE_TIME:\n- Choose \"response_time\" when performance/latency is the main issue\n- Conditions: High response time (>1000ms) + stable system + few users (<10)\n- System works but is slow, NOT overloaded (CPU/memory <70%)\n- ONLY if load conditions are NOT met\n- Example: Response time: 5000ms, CPU: 20%, Memory: 25%, Users: 4\n\nDECISION FLOW:\n1. Check failed pods + error rate \u2192 reachability?\n2. Check CPU/memory + users + request rate \u2192 load?\n3. Else \u2192 response_time?\n\nRESPONSE (JSON only):\n{\n  \"analysis_summary\": {\n    \"recommended_test_type\": \"reachability|response_time|load\",\n    \"justification\": \"Detailed explanation of why this test type is most appropriate based on the metrics\",\n    \"priority\": \"high|medium|low\"\n  }\n}\n\nReturn only valid JSON.",
        "prompt_type": "analysis_generation",
        "category": "analyzer_v10_3"
      },
      "response": {
        "timestamp": "2025-10-27T12:56:12.013233",
        "unique_session_id": "experiment_reachability_1761569770_unknown_20251027_125610_197596",
        "context": {
          "analysis_timestamp": "27/10/2025 12:56:10",
          "experiment_id": "experiment_reachability_1761569770",
          "used_system_cpu": 1.5,
          "used_system_memory": 4.0,
          "median_response_time": 2500.0,
          "cpu_range_description": "within healthy range (<25%)",
          "memory_range_description": "within healthy range (<30%)",
          "response_time_range_description": "within critical range (>70ms)",
          "system_status": "operational",
          "concurrent_users": 0,
          "request_rate": 0.0,
          "session_duration": 0,
          "load_pattern": "burst",
          "load_pattern_description": "Burst load pattern",
          "current_load_description": "Moderate load",
          "target_system_pods": 0,
          "quality_of_media": 600,
          "target_system_architecture": "Microservices",
          "allocated_cpus": 6,
          "allocated_memory": 6,
          "error_rate": 95.0,
          "throughput": 0.0,
          "network_latency": 0.0,
          "active_pods": 0,
          "pending_pods": 0,
          "failed_pods": 15,
          "health_criterion": "Critical"
        },
        "prompt": "Analyze kube-znn service metrics and recommend test type.\n\nMETRICS:\n- CPU: 1.5% (within healthy range (<25%))\n- Memory: 4.0% (within healthy range (<30%))  \n- Response Time: 2500.0ms (within critical range (>70ms))\n- Error Rate: 95.0%\n- Throughput: 0.0 req/s\n- Network Latency: 0.0ms\n\nLOAD:\n- Users: 0, Rate: 0.0 req/s, Duration: 0s\n- Pattern: burst (Burst load pattern)\n- Current: Moderate load\n\nINFRASTRUCTURE:\n- Pods: 0 active, 0 pending, 15 failed\n- Resources: 6 CPUs, 6GB RAM\n- Target: 0 pods, Quality: 600\n\nADDITIONAL CONTEXT:\n- Pod Status: 0 running, 0 pending, 15 failed\n- Resource Allocation: 6 CPUs, 6GB RAM allocated\n- Load Pattern: burst with 0 users at 0.0 req/s\n- System Health: Critical (CPU: 1.5%, Memory: 4.0%, Response: 2500.0ms)\n\nSTATUS: operational\n\nANALYSIS: Analyze ALL metrics to recommend the most appropriate test type.\n\nTEST TYPE SELECTION RULES (HOLISTIC ANALYSIS):\nAnalyze ALL metrics together to determine the PRIMARY concern. Use this DECISION TREE:\n\nPRIORITY 1 - REACHABILITY:\n- Choose \"reachability\" when connectivity is the main issue\n- Conditions: Many failed pods (>5) + high error rate (>50%) + few users connecting (<10)\n- Indicators: System cannot be reached, high network latency (>1000ms), pods not responding\n- Example: Failed pods: 15, Error rate: 95%, Users: 1\n\nPRIORITY 2 - LOAD (HIGHEST PRIORITY CHECK):\n- Choose \"load\" when capacity/scalability is the main issue\n- Conditions: High CPU/memory (>70%) + many users (>100) + high request rate (>50 req/s)\n- KEY POINT: High response time with high CPU/memory + many users = LOAD, not response_time\n- System is overloaded and struggling with demand\n- Example: CPU: 83%, Memory: 82%, Users: 668, Request rate: 115 req/s\n\nPRIORITY 3 - RESPONSE_TIME:\n- Choose \"response_time\" when performance/latency is the main issue\n- Conditions: High response time (>1000ms) + stable system + few users (<10)\n- System works but is slow, NOT overloaded (CPU/memory <70%)\n- ONLY if load conditions are NOT met\n- Example: Response time: 5000ms, CPU: 20%, Memory: 25%, Users: 4\n\nDECISION FLOW:\n1. Check failed pods + error rate \u2192 reachability?\n2. Check CPU/memory + users + request rate \u2192 load?\n3. Else \u2192 response_time?\n\nRESPONSE (JSON only):\n{\n  \"analysis_summary\": {\n    \"recommended_test_type\": \"reachability|response_time|load\",\n    \"justification\": \"Detailed explanation of why this test type is most appropriate based on the metrics\",\n    \"priority\": \"high|medium|low\"\n  }\n}\n\nReturn only valid JSON.",
        "enhanced_prompt": "\nEXPERIMENT_ID: experiment_reachability_1761569770\nRUN_ID: unknown\nTIMESTAMP: 20251027_125610_197596\nUNIQUE_SESSION: experiment_reachability_1761569770_unknown_20251027_125610_197596\n\nAnalyze kube-znn service metrics and recommend test type.\n\nMETRICS:\n- CPU: 1.5% (within healthy range (<25%))\n- Memory: 4.0% (within healthy range (<30%))  \n- Response Time: 2500.0ms (within critical range (>70ms))\n- Error Rate: 95.0%\n- Throughput: 0.0 req/s\n- Network Latency: 0.0ms\n\nLOAD:\n- Users: 0, Rate: 0.0 req/s, Duration: 0s\n- Pattern: burst (Burst load pattern)\n- Current: Moderate load\n\nINFRASTRUCTURE:\n- Pods: 0 active, 0 pending, 15 failed\n- Resources: 6 CPUs, 6GB RAM\n- Target: 0 pods, Quality: 600\n\nADDITIONAL CONTEXT:\n- Pod Status: 0 running, 0 pending, 15 failed\n- Resource Allocation: 6 CPUs, 6GB RAM allocated\n- Load Pattern: burst with 0 users at 0.0 req/s\n- System Health: Critical (CPU: 1.5%, Memory: 4.0%, Response: 2500.0ms)\n\nSTATUS: operational\n\nANALYSIS: Analyze ALL metrics to recommend the most appropriate test type.\n\nTEST TYPE SELECTION RULES (HOLISTIC ANALYSIS):\nAnalyze ALL metrics together to determine the PRIMARY concern. Use this DECISION TREE:\n\nPRIORITY 1 - REACHABILITY:\n- Choose \"reachability\" when connectivity is the main issue\n- Conditions: Many failed pods (>5) + high error rate (>50%) + few users connecting (<10)\n- Indicators: System cannot be reached, high network latency (>1000ms), pods not responding\n- Example: Failed pods: 15, Error rate: 95%, Users: 1\n\nPRIORITY 2 - LOAD (HIGHEST PRIORITY CHECK):\n- Choose \"load\" when capacity/scalability is the main issue\n- Conditions: High CPU/memory (>70%) + many users (>100) + high request rate (>50 req/s)\n- KEY POINT: High response time with high CPU/memory + many users = LOAD, not response_time\n- System is overloaded and struggling with demand\n- Example: CPU: 83%, Memory: 82%, Users: 668, Request rate: 115 req/s\n\nPRIORITY 3 - RESPONSE_TIME:\n- Choose \"response_time\" when performance/latency is the main issue\n- Conditions: High response time (>1000ms) + stable system + few users (<10)\n- System works but is slow, NOT overloaded (CPU/memory <70%)\n- ONLY if load conditions are NOT met\n- Example: Response time: 5000ms, CPU: 20%, Memory: 25%, Users: 4\n\nDECISION FLOW:\n1. Check failed pods + error rate \u2192 reachability?\n2. Check CPU/memory + users + request rate \u2192 load?\n3. Else \u2192 response_time?\n\nRESPONSE (JSON only):\n{\n  \"analysis_summary\": {\n    \"recommended_test_type\": \"reachability|response_time|load\",\n    \"justification\": \"Detailed explanation of why this test type is most appropriate based on the metrics\",\n    \"priority\": \"high|medium|low\"\n  }\n}\n\nReturn only valid JSON.\n\nIMPORTANTE: Esta \u00e9 uma requisi\u00e7\u00e3o \u00fanica para o experimento experiment_reachability_1761569770, run unknown. \nN\u00c3O reutilize dados de experimentos anteriores. Gere uma resposta espec\u00edfica para este momento.\n",
        "response": " {\n  \"analysis_summary\": {\n    \"recommended_test_type\": \"reachability\",\n    \"justification\": \"The high number of failed pods (15) and the extremely high error rate (95%) indicate a problem with reachability. This is the most significant issue based on the provided metrics.\",\n    \"priority\": \"high\"\n  }\n}",
        "prompt_type": "analysis_generation",
        "experiment_id": "experiment_reachability_1761569770",
        "run_id": "unknown"
      },
      "interaction_complete": true,
      "entry_timestamp": "2025-10-27T12:56:12.022952",
      "entry_type": "llm_request"
    },
    {
      "request": {
        "context": {
          "analysis_timestamp": "27/10/2025 12:56:10",
          "experiment_id": "experiment_reachability_1761569770",
          "used_system_cpu": 1.5,
          "used_system_memory": 4.0,
          "median_response_time": 2500.0,
          "cpu_range_description": "within healthy range (<25%)",
          "memory_range_description": "within healthy range (<30%)",
          "response_time_range_description": "within critical range (>70ms)",
          "system_status": "operational",
          "concurrent_users": 0,
          "request_rate": 0.0,
          "session_duration": 0,
          "load_pattern": "burst",
          "load_pattern_description": "Burst load pattern",
          "current_load_description": "Moderate load",
          "target_system_pods": 0,
          "quality_of_media": 600,
          "target_system_architecture": "Microservices",
          "allocated_cpus": 6,
          "allocated_memory": 6,
          "error_rate": 95.0,
          "throughput": 0.0,
          "network_latency": 0.0,
          "active_pods": 0,
          "pending_pods": 0,
          "failed_pods": 15,
          "health_criterion": "Critical"
        },
        "prompt": "Analyze kube-znn service metrics and recommend test type.\n\nMETRICS:\n- CPU: 1.5% (within healthy range (<25%))\n- Memory: 4.0% (within healthy range (<30%))  \n- Response Time: 2500.0ms (within critical range (>70ms))\n- Error Rate: 95.0%\n- Throughput: 0.0 req/s\n- Network Latency: 0.0ms\n\nLOAD:\n- Users: 0, Rate: 0.0 req/s, Duration: 0s\n- Pattern: burst (Burst load pattern)\n- Current: Moderate load\n\nINFRASTRUCTURE:\n- Pods: 0 active, 0 pending, 15 failed\n- Resources: 6 CPUs, 6GB RAM\n- Target: 0 pods, Quality: 600\n\nADDITIONAL CONTEXT:\n- Pod Status: 0 running, 0 pending, 15 failed\n- Resource Allocation: 6 CPUs, 6GB RAM allocated\n- Load Pattern: burst with 0 users at 0.0 req/s\n- System Health: Critical (CPU: 1.5%, Memory: 4.0%, Response: 2500.0ms)\n\nSTATUS: operational\n\nANALYSIS: Analyze ALL metrics to recommend the most appropriate test type.\n\nTEST TYPE SELECTION RULES (HOLISTIC ANALYSIS):\nAnalyze ALL metrics together to determine the PRIMARY concern. Use this DECISION TREE:\n\nPRIORITY 1 - REACHABILITY:\n- Choose \"reachability\" when connectivity is the main issue\n- Conditions: Many failed pods (>5) + high error rate (>50%) + few users connecting (<10)\n- Indicators: System cannot be reached, high network latency (>1000ms), pods not responding\n- Example: Failed pods: 15, Error rate: 95%, Users: 1\n\nPRIORITY 2 - LOAD (HIGHEST PRIORITY CHECK):\n- Choose \"load\" when capacity/scalability is the main issue\n- Conditions: High CPU/memory (>70%) + many users (>100) + high request rate (>50 req/s)\n- KEY POINT: High response time with high CPU/memory + many users = LOAD, not response_time\n- System is overloaded and struggling with demand\n- Example: CPU: 83%, Memory: 82%, Users: 668, Request rate: 115 req/s\n\nPRIORITY 3 - RESPONSE_TIME:\n- Choose \"response_time\" when performance/latency is the main issue\n- Conditions: High response time (>1000ms) + stable system + few users (<10)\n- System works but is slow, NOT overloaded (CPU/memory <70%)\n- ONLY if load conditions are NOT met\n- Example: Response time: 5000ms, CPU: 20%, Memory: 25%, Users: 4\n\nDECISION FLOW:\n1. Check failed pods + error rate \u2192 reachability?\n2. Check CPU/memory + users + request rate \u2192 load?\n3. Else \u2192 response_time?\n\nRESPONSE (JSON only):\n{\n  \"analysis_summary\": {\n    \"recommended_test_type\": \"reachability|response_time|load\",\n    \"justification\": \"Detailed explanation of why this test type is most appropriate based on the metrics\",\n    \"priority\": \"high|medium|low\"\n  }\n}\n\nReturn only valid JSON.",
        "prompt_type": "analysis_generation",
        "category": "analyzer_v10_3"
      },
      "response": {},
      "interaction_complete": true,
      "entry_timestamp": "2025-10-27T12:56:10.181955",
      "entry_type": "llm_request"
    },
    {
      "request": {
        "prompt": "Analyze kube-znn service metrics and recommend test type.\n\nMETRICS:\n- CPU: 1.5% (within healthy range (<25%))\n- Memory: 4.0% (within healthy range (<30%))  \n- Response Time: 2500.0ms (within critical range (>70ms))\n- Error Rate: 95.0%\n- Throughput: 0.0 req/s\n- Network Latency: 0.0ms\n\nLOAD:\n- Users: 0, Rate: 0.0 req/s, Duration: 0s\n- Pattern: burst (Burst load pattern)\n- Current: Moderate load\n\nINFRASTRUCTURE:\n- Pods: 0 active, 0 pending, 15 failed\n- Resources: 6 CPUs, 6GB RAM\n- Target: 0 pods, Quality: 600\n\nADDITIONAL CONTEXT:\n- Pod Status: 0 running, 0 pending, 15 failed\n- Resource Allocation: 6 CPUs, 6GB RAM allocated\n- Load Pattern: burst with 0 users at 0.0 req/s\n- System Health: Critical (CPU: 1.5%, Memory: 4.0%, Response: 2500.0ms)\n\nSTATUS: operational\n\nANALYSIS: Analyze ALL metrics to recommend the most appropriate test type.\n\nTEST TYPE SELECTION RULES (HOLISTIC ANALYSIS):\nAnalyze ALL metrics together to determine the PRIMARY concern. Use this DECISION TREE:\n\nPRIORITY 1 - REACHABILITY:\n- Choose \"reachability\" when connectivity is the main issue\n- Conditions: Many failed pods (>5) + high error rate (>50%) + few users connecting (<10)\n- Indicators: System cannot be reached, high network latency (>1000ms), pods not responding\n- Example: Failed pods: 15, Error rate: 95%, Users: 1\n\nPRIORITY 2 - LOAD (HIGHEST PRIORITY CHECK):\n- Choose \"load\" when capacity/scalability is the main issue\n- Conditions: High CPU/memory (>70%) + many users (>100) + high request rate (>50 req/s)\n- KEY POINT: High response time with high CPU/memory + many users = LOAD, not response_time\n- System is overloaded and struggling with demand\n- Example: CPU: 83%, Memory: 82%, Users: 668, Request rate: 115 req/s\n\nPRIORITY 3 - RESPONSE_TIME:\n- Choose \"response_time\" when performance/latency is the main issue\n- Conditions: High response time (>1000ms) + stable system + few users (<10)\n- System works but is slow, NOT overloaded (CPU/memory <70%)\n- ONLY if load conditions are NOT met\n- Example: Response time: 5000ms, CPU: 20%, Memory: 25%, Users: 4\n\nDECISION FLOW:\n1. Check failed pods + error rate \u2192 reachability?\n2. Check CPU/memory + users + request rate \u2192 load?\n3. Else \u2192 response_time?\n\nRESPONSE (JSON only):\n{\n  \"analysis_summary\": {\n    \"recommended_test_type\": \"reachability|response_time|load\",\n    \"justification\": \"Detailed explanation of why this test type is most appropriate based on the metrics\",\n    \"priority\": \"high|medium|low\"\n  }\n}\n\nReturn only valid JSON.",
        "context": {
          "analysis_timestamp": "27/10/2025 12:56:10",
          "experiment_id": "experiment_reachability_1761569770",
          "used_system_cpu": 1.5,
          "used_system_memory": 4.0,
          "median_response_time": 2500.0,
          "cpu_range_description": "within healthy range (<25%)",
          "memory_range_description": "within healthy range (<30%)",
          "response_time_range_description": "within critical range (>70ms)",
          "system_status": "operational",
          "concurrent_users": 0,
          "request_rate": 0.0,
          "session_duration": 0,
          "load_pattern": "burst",
          "load_pattern_description": "Burst load pattern",
          "current_load_description": "Moderate load",
          "target_system_pods": 0,
          "quality_of_media": 600,
          "target_system_architecture": "Microservices",
          "allocated_cpus": 6,
          "allocated_memory": 6,
          "error_rate": 95.0,
          "throughput": 0.0,
          "network_latency": 0.0,
          "active_pods": 0,
          "pending_pods": 0,
          "failed_pods": 15,
          "health_criterion": "Critical"
        }
      },
      "response": {
        "analysis": {
          "experiment_id": "experiment_reachability_1761569770",
          "cpu_usage_percent": 1.5,
          "memory_usage_percent": 4.0,
          "kube_znn_response_time_ms": 2500.0,
          "error_rate": 95.0,
          "throughput": 0.0,
          "network_latency": 0.0,
          "cpu_range_description": "within healthy range (<25%)",
          "memory_range_description": "within healthy range (<30%)",
          "response_time_range_description": "within critical range (>70ms)",
          "system_status": "operational",
          "quality_of_media": 600,
          "concurrent_users": 0,
          "request_rate": 0.0,
          "session_duration": 0,
          "load_pattern": "burst",
          "load_pattern_description": "Burst load pattern",
          "load_description": "Moderate load",
          "health_criterion": "Critical",
          "target_system_pods": 3,
          "active_pods": 0,
          "pending_pods": 0,
          "failed_pods": 15,
          "allocated_cpus": 6,
          "allocated_memory": 6
        }
      },
      "interaction_complete": true,
      "entry_timestamp": "2025-10-27T12:56:10.178187",
      "entry_type": "llm_request"
    }
  ]
}